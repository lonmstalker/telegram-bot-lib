name: Quality Gate

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  quality-gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Verify and analyze
        shell: bash
        run: |
          mvn -B --no-transfer-progress \
            spotless:check checkstyle:check verify \
            com.github.spotbugs:spotbugs-maven-plugin:4.7.3.5:spotbugs \
            dependency-check:aggregate \
            org.cyclonedx:cyclonedx-maven-plugin:2.7.6:makeAggregateBom \
            org.ossreviewtoolkit:ort-maven-plugin:0.1.0:evaluate \
            jacoco:report

      - name: Upload SpotBugs
        uses: actions/upload-artifact@v4
        with:
          name: spotbugs
          path: '**/target/spotbugs*.xml'

      - name: Upload JaCoCo
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: '**/target/site/jacoco'

      - name: Upload Dependency-Check
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check
          path: '**/target/dependency-check-report.*'

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: '**/target/bom.*'

      - name: Upload ORT
        uses: actions/upload-artifact@v4
        with:
          name: ort-result
          path: '**/target/ort/**'

  sonar:
    runs-on: ubuntu-latest
    needs: quality-gate
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: SonarQube Scan
        shell: bash
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn -B --no-transfer-progress sonar:sonar \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.host.url=$SONAR_HOST_URL

